---
title: "Exploratory data analysis"
format: html
execute: 
  echo: false
---


```{r}
#| message: false
#| label: source-scripts

source(here::here("R/00_libraries.R"))
source(here::here("R/01_utils.R"))
```

```{r}
#| label: data

dc_data <- list.files(here::here("data"), full.names = TRUE) |> 
  (\(x) x[!grepl("configuration-table|modelling_data", x)])() |> 
  purrr::map_dfr(
    read.csv
  ) |> 
  filter(
    grepl("annual", frequency),
    grepl("^Q", org)
    ) |> 
  select(
    "metric",
    "year", 
    "org", 
    "value"
  ) |> 
  pivot_wider(
    names_from = metric,
    values_from = value
  )

metrics <- read.csv(
  here::here("data/configuration-table.csv"),
  encoding = "latin1") |> 
  filter(
    status != "incorrect geography"
  )

```

## Correlation plots

These plots highlight which of the variables are correlated.


```{r}
#| label: corr-plots
#| fig-height: 9
#| fig-width: 9
#| results: 'asis'
#| warning: false

cat("::: {.panel-tabset}\n\n")

for (dom in (sort(unique(metrics$domain)))) {
  cat(paste("##",
          dom,
          "\n\n"))
  
  domain_metrics <- metrics |> 
    filter(domain == dom) |> 
    pull(metric)

  p <- dc_data |> 
    select(all_of(domain_metrics)) |>
    rename_with(.fn = ~ abbreviate(.x, 20)) |> 
    cor(use = "pairwise.complete.obs")
  
  removed_metrics <- metrics |> 
    filter(
      status == "remove",
      domain == dom
    ) |> 
    pull(metric)
  
  label_colours <- rep("black", length(domain_metrics))
  label_colours[match(removed_metrics, domain_metrics)] <- "red"
  
  
  corrplot::corrplot(
    p,
    tl.col = label_colours)
  
  # print(p)
  
  cat("\n\n")
  
  
  
  if (length(removed_metrics) > 0) {
    cat("The following either provide too little data or are highly correlated with another metric, and have therefore been removed:\n\n")
  
    cat(
      paste("*", removed_metrics, "\n\n")
    )
  }
  
}

cat(":::")


```

